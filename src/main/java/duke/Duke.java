package duke;

import duke.command.Command;
import duke.task.DukeList;

/**
 * Represents the main class for the Duke application.
 * Initializes and coordinates various components of the application.
 */
public class Duke {
    private DukeList dukelist;
    private Ui ui;
    private Storage storage;
    private static final String FILE_PATH = "data/duke.txt";
    private Parser parser;

    /**
     * Constructs a Duke object with the specified file path.
     *
     * @param filePath The path to the data file for storage.
     */
    public Duke(String filePath) {
        parser = new Parser();
        ui = new Ui();
        this.storage = new Storage(filePath);
        try {
            this.dukelist = new DukeList(this.storage.getData());
        } catch (DukeException e) {
            this.dukelist = new DukeList();
            System.out.println("error");
        }
    }
    /**
     * Gets a response from Duke based on user input.
     *
     * @param userInput The user's input.
     * @return The response generated by Duke.
     */
    public String getResponse(String userInput) {
        String responseStr = null;
        try {
            Command c = this.parser.parseCommand(userInput);
            responseStr = c.execute(dukelist, storage);
        } catch (DukeException e) {
            System.out.println(e.getMessage());
        }
        return responseStr;
    }

}
